product-name: pivotal-container-service
product-properties:
  .pivotal-container-service.pks_tls:
    value:
      cert_pem: ((pivotal-container-service_pks_tls.cert_pem))
      private_key_pem: ((pivotal-container-service_pks_tls.private_key_pem))
  .properties.bosh-metric-sink-etcd:
    value: true
  .properties.bosh-metric-sink-kube-apiserver:
    value: false
  .properties.bosh-metric-sink-kube-controller-manager:
    value: false
  .properties.bosh-metric-sink-kubelet:
    value: false
  .properties.bosh-metric-sink-node-exporter-master:
    value: false
  .properties.bosh-metric-sink-node-exporter-pks-api:
    value: false
  .properties.bosh-metric-sink-node-exporter-worker:
    value: false
  .properties.bosh-metric-sink-outputs:
    value: |
      [[outputs.discard]]
  .properties.cloud_provider:
    selected_option: gcp
    value: GCP
  .properties.cloud_provider.gcp.master_service_account:
    value: gcp-nonprod-pks-pks-master@fe-agregory.iam.gserviceaccount.com
  .properties.cloud_provider.gcp.network:
    value: gcp-nonprod-pcf-network
  .properties.cloud_provider.gcp.project_id:
    value: fe-agregory
  .properties.cloud_provider.gcp.worker_service_account:
    value: gcp-nonprod-pks-pks-worker@fe-agregory.iam.gserviceaccount.com
  .properties.log_sink_resources_deploy:
    value: true
  .properties.metric_sink_resources_deploy:
    value: true
  .properties.network_selector:
    selected_option: flannel
    value: flannel
  .properties.network_selector.flannel.pod_network_cidr:
    value: 10.200.0.0/16
  .properties.network_selector.flannel.service_cluster_cidr:
    value: 10.100.200.0/24
  .properties.node_exporter_deploy:
    value: false
  .properties.oidc_selector:
    selected_option: disabled
    value: disabled
  .properties.pks-vrli:
    selected_option: disabled
    value: disabled
  .properties.pks-vrops:
    selected_option: disabled
    value: disabled
  .properties.pks_api_hostname:
    value: pks-api.gcp-nonprod.arg-pivotal.com
  .properties.plan1_selector:
    selected_option: active
    value: Plan Active
  .properties.plan1_selector.active.allow_privileged_containers:
    value: false
  .properties.plan1_selector.active.description:
    value: 'Example: This plan will configure a lightweight kubernetes cluster. Not
      recommended for production workloads.'
  .properties.plan1_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan1_selector.active.kubelet_drain_force:
    value: true
  .properties.plan1_selector.active.kubelet_drain_force_node:
    value: false
  .properties.plan1_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan1_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan1_selector.active.kubelet_drain_timeout:
    value: 0
  .properties.plan1_selector.active.master_az_placement:
    value:
    - us-east1-b
    - us-east1-c
    - us-east1-d
  .properties.plan1_selector.active.master_instances:
    value: 1
  .properties.plan1_selector.active.max_worker_instances:
    value: 50
  .properties.plan1_selector.active.name:
    value: small-vanilla
  .properties.plan1_selector.active.worker_az_placement:
    value:
    - us-east1-b
    - us-east1-c
    - us-east1-d
  .properties.plan1_selector.active.worker_instances:
    value: 1
  .properties.plan2_selector:
    selected_option: active
    value: Plan Active
  .properties.plan2_selector.active.admission_plugins:
    value:
    - pod_security_policy
  .properties.plan2_selector.active.allow_privileged_containers:
    value: false
  .properties.plan2_selector.active.description:
    value: 'Example: This plan will configure a small sized kubernetes cluster, suitable
      for more pods.'
  .properties.plan2_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan2_selector.active.kubelet_drain_force:
    value: true
  .properties.plan2_selector.active.kubelet_drain_force_node:
    value: true
  .properties.plan2_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan2_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan2_selector.active.kubelet_drain_timeout:
    value: 10
  .properties.plan2_selector.active.master_az_placement:
    value:
    - us-east1-b
    - us-east1-c
    - us-east1-d
  .properties.plan2_selector.active.master_instances:
    value: 1
  .properties.plan2_selector.active.max_worker_instances:
    value: 50
  .properties.plan2_selector.active.name:
    value: small-psp
  .properties.plan2_selector.active.worker_az_placement:
    value:
    - us-east1-b
    - us-east1-c
    - us-east1-d
  .properties.plan2_selector.active.worker_instances:
    value: 1
  .properties.plan3_selector:
    selected_option: active
    value: Plan Active
  .properties.plan3_selector.active.allow_privileged_containers:
    value: true
  .properties.plan3_selector.active.description:
    value: 'Example: This plan will configure a small  kubernetes cluster with privileged
      containers enabled.'
  .properties.plan3_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan3_selector.active.kubelet_drain_force:
    value: true
  .properties.plan3_selector.active.kubelet_drain_force_node:
    value: true
  .properties.plan3_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan3_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan3_selector.active.kubelet_drain_timeout:
    value: 30
  .properties.plan3_selector.active.master_az_placement:
    value:
    - us-east1-d
    - us-east1-c
    - us-east1-b
  .properties.plan3_selector.active.master_instances:
    value: 1
  .properties.plan3_selector.active.max_worker_instances:
    value: 50
  .properties.plan3_selector.active.name:
    value: small-priv
  .properties.plan3_selector.active.worker_az_placement:
    value:
    - us-east1-d
    - us-east1-c
    - us-east1-b
  .properties.plan3_selector.active.worker_instances:
    value: 1
  .properties.plan3_selector.active.worker_vm_type:
    value: medium.disk
  .properties.plan4_selector:
    selected_option: active
    value: Plan Active
  .properties.plan4_selector.active.addons_spec:
    value: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx

      ---

      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: nginx-configuration
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx

      ---
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: tcp-services
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx

      ---
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: udp-services
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx

      ---
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: nginx-ingress-serviceaccount
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx

      ---
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRole
      metadata:
        name: nginx-ingress-clusterrole
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      rules:
        - apiGroups:
            - ""
          resources:
            - configmaps
            - endpoints
            - nodes
            - pods
            - secrets
          verbs:
            - list
            - watch
        - apiGroups:
            - ""
          resources:
            - nodes
          verbs:
            - get
        - apiGroups:
            - ""
          resources:
            - services
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - ""
          resources:
            - events
          verbs:
            - create
            - patch
        - apiGroups:
            - "extensions"
            - "networking.k8s.io"
          resources:
            - ingresses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - "extensions"
            - "networking.k8s.io"
          resources:
            - ingresses/status
          verbs:
            - update

      ---
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: Role
      metadata:
        name: nginx-ingress-role
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      rules:
        - apiGroups:
            - ""
          resources:
            - configmaps
            - pods
            - secrets
            - namespaces
          verbs:
            - get
        - apiGroups:
            - ""
          resources:
            - configmaps
          resourceNames:
            # Defaults to "<election-id>-<ingress-class>"
            # Here: "<ingress-controller-leader>-<nginx>"
            # This has to be adapted if you change either parameter
            # when launching the nginx-ingress-controller.
            - "ingress-controller-leader-nginx"
          verbs:
            - get
            - update
        - apiGroups:
            - ""
          resources:
            - configmaps
          verbs:
            - create
        - apiGroups:
            - ""
          resources:
            - endpoints
          verbs:
            - get

      ---
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: RoleBinding
      metadata:
        name: nginx-ingress-role-nisa-binding
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: nginx-ingress-role
      subjects:
        - kind: ServiceAccount
          name: nginx-ingress-serviceaccount
          namespace: ingress-nginx

      ---
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: nginx-ingress-clusterrole-nisa-binding
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: nginx-ingress-clusterrole
      subjects:
        - kind: ServiceAccount
          name: nginx-ingress-serviceaccount
          namespace: ingress-nginx

      ---

      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: nginx-ingress-controller
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
            app.kubernetes.io/part-of: ingress-nginx
        template:
          metadata:
            labels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/part-of: ingress-nginx
            annotations:
              prometheus.io/port: "10254"
              prometheus.io/scrape: "true"
          spec:
            # wait up to five minutes for the drain of connections
            terminationGracePeriodSeconds: 300
            serviceAccountName: nginx-ingress-serviceaccount
            nodeSelector:
              kubernetes.io/os: linux
            containers:
              - name: nginx-ingress-controller
                image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
                args:
                  - /nginx-ingress-controller
                  - --configmap=$(POD_NAMESPACE)/nginx-configuration
                  - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
                  - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
                  - --publish-service=$(POD_NAMESPACE)/ingress-nginx
                  - --annotations-prefix=nginx.ingress.kubernetes.io
                securityContext:
                  allowPrivilegeEscalation: true
                  capabilities:
                    drop:
                      - ALL
                    add:
                      - NET_BIND_SERVICE
                  # www-data -> 33
                  runAsUser: 33
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                ports:
                  - name: http
                    containerPort: 80
                  - name: https
                    containerPort: 443
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 10254
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 10254
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10
                lifecycle:
                  preStop:
                    exec:
                      command:
                        - /wait-shutdown

      ---
      kind: Service
      apiVersion: v1
      metadata:
        name: ingress-nginx
        namespace: ingress-nginx
        labels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
      spec:
        externalTrafficPolicy: Local
        type: LoadBalancer
        selector:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
        ports:
          - name: http
            port: 80
            targetPort: http
          - name: https
            port: 443
            targetPort: https

      ---
  .properties.plan4_selector.active.allow_privileged_containers:
    value: false
  .properties.plan4_selector.active.description:
    value: This plan has 1 master and 2 workers with an ingress controller set up.  On
      GCP, this will trigger a GCP Load Balancer to be created.
  .properties.plan4_selector.active.kubelet_drain_delete_local_data:
    value: true
  .properties.plan4_selector.active.kubelet_drain_force:
    value: true
  .properties.plan4_selector.active.kubelet_drain_force_node:
    value: true
  .properties.plan4_selector.active.kubelet_drain_grace_period:
    value: 10
  .properties.plan4_selector.active.kubelet_drain_ignore_daemonsets:
    value: true
  .properties.plan4_selector.active.kubelet_drain_timeout:
    value: 30
  .properties.plan4_selector.active.master_az_placement:
    value:
    - us-east1-d
    - us-east1-c
    - us-east1-b
  .properties.plan4_selector.active.master_instances:
    value: 1
  .properties.plan4_selector.active.max_worker_instances:
    value: 50
  .properties.plan4_selector.active.name:
    value: small-ingress
  .properties.plan4_selector.active.worker_az_placement:
    value:
    - us-east1-d
    - us-east1-c
    - us-east1-b
  .properties.plan4_selector.active.worker_instances:
    value: 2
  .properties.plan5_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan6_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan7_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan8_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan9_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan10_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan11_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan12_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan13_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.proxy_selector:
    selected_option: disabled
    value: Disabled
  .properties.syslog_selector:
    selected_option: disabled
    value: disabled
  .properties.telemetry_installation_purpose_selector:
    selected_option: not_provided
    value: not_provided
  .properties.telemetry_selector:
    selected_option: enabled
    value: enabled
  .properties.telemetry_selector.enabled.billing_polling_interval:
    value: 60
  .properties.telemetry_selector.enabled.environment_provider:
    value: none
  .properties.telemetry_selector.enabled.telemetry_polling_interval:
    value: 600
  .properties.telemetry_selector.enabled.telemetry_url:
    value: https://vcsa.vmware.com/ph
  .properties.tmc:
    selected_option: disabled
    value: disabled
  .properties.uaa:
    selected_option: internal
    value: internal
  .properties.uaa_pks_cli_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cli_refresh_token_lifetime:
    value: 21600
  .properties.uaa_pks_cluster_client_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cluster_client_refresh_token_lifetime:
    value: 21600
  .properties.vm_extensions:
    value:
    - public_ip
  .properties.wavefront:
    selected_option: disabled
    value: disabled
  .properties.worker_max_in_flight:
    value: 1
network-properties:
  network:
    name: gcp-nonprod-infrastructure-subnet
  other_availability_zones:
  - name: us-east1-b
  - name: us-east1-c
  - name: us-east1-d
  service_network:
    name: gcp-nonprod-services-subnet
  singleton_availability_zone:
    name: us-east1-b
resource-config:
  pivotal-container-service:
    max_in_flight: 1
    additional_networks: []
    additional_vm_extensions: []
    elb_names:
    - tcp:gcp-nonprod-pks-pks-api
    instance_type:
      id: automatic
    instances: automatic
    internet_connected: true
    persistent_disk:
      size_mb: automatic
    swap_as_percent_of_memory_size: automatic
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: false
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false

